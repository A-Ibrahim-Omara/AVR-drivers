
TIMERS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a20  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000008  00800060  00800060  00000a94  2**0
                  ALLOC
  2 .stab         00000f54  00000000  00000000  00000a94  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000c24  00000000  00000000  000019e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 1a 04 	jmp	0x834	; 0x834 <__vector_10>
  2c:	0c 94 ce 03 	jmp	0x79c	; 0x79c <__vector_11>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a8 36       	cpi	r26, 0x68	; 104
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 09 05 	call	0xa12	; 0xa12 <main>
  74:	0c 94 0e 05 	jmp	0xa1c	; 0xa1c <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <MDIO_VoidInit>:
#include "../Include/MCAL/DIO/DIO_Interface.h"
#include "../Include/MCAL/DIO/DIO_Private.h"

/*-------------------------------------------------------------*/
void MDIO_VoidInit(void)
{
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	cd b7       	in	r28, 0x3d	; 61
  82:	de b7       	in	r29, 0x3e	; 62
	DIO_U8_DDRA_REG= CONC_BIT(DIO_U8_PA7_INITIAL_DIRECTION
  84:	ea e3       	ldi	r30, 0x3A	; 58
  86:	f0 e0       	ldi	r31, 0x00	; 0
  88:	8f ef       	ldi	r24, 0xFF	; 255
  8a:	80 83       	st	Z, r24
						         ,DIO_U8_PA3_INITIAL_DIRECTION
						         ,DIO_U8_PA2_INITIAL_DIRECTION
						         ,DIO_U8_PA1_INITIAL_DIRECTION
						         ,DIO_U8_PA0_INITIAL_DIRECTION);

	DIO_U8_DDRB_REG= CONC_BIT(DIO_U8_PB7_INITIAL_DIRECTION
  8c:	e7 e3       	ldi	r30, 0x37	; 55
  8e:	f0 e0       	ldi	r31, 0x00	; 0
  90:	8f e0       	ldi	r24, 0x0F	; 15
  92:	80 83       	st	Z, r24
					         ,DIO_U8_PB3_INITIAL_DIRECTION
					         ,DIO_U8_PB2_INITIAL_DIRECTION
					         ,DIO_U8_PB1_INITIAL_DIRECTION
					         ,DIO_U8_PB0_INITIAL_DIRECTION);

	DIO_U8_DDRC_REG= CONC_BIT(DIO_U8_PC7_INITIAL_DIRECTION
  94:	e4 e3       	ldi	r30, 0x34	; 52
  96:	f0 e0       	ldi	r31, 0x00	; 0
  98:	8f ef       	ldi	r24, 0xFF	; 255
  9a:	80 83       	st	Z, r24
						     ,DIO_U8_PC3_INITIAL_DIRECTION
						     ,DIO_U8_PC2_INITIAL_DIRECTION
						     ,DIO_U8_PC1_INITIAL_DIRECTION
						     ,DIO_U8_PC0_INITIAL_DIRECTION);

	DIO_U8_DDRD_REG= CONC_BIT(DIO_U8_PD7_INITIAL_DIRECTION
  9c:	e1 e3       	ldi	r30, 0x31	; 49
  9e:	f0 e0       	ldi	r31, 0x00	; 0
  a0:	8f ef       	ldi	r24, 0xFF	; 255
  a2:	80 83       	st	Z, r24
					         ,DIO_U8_PD3_INITIAL_DIRECTION
					         ,DIO_U8_PD2_INITIAL_DIRECTION
					         ,DIO_U8_PD1_INITIAL_DIRECTION
					         ,DIO_U8_PD0_INITIAL_DIRECTION);

	DIO_U8_PORTA_REG= CONC_BIT(DIO_U8_PA7_INITIAL_VALUE
  a4:	eb e3       	ldi	r30, 0x3B	; 59
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	10 82       	st	Z, r1
					          ,DIO_U8_PA3_INITIAL_VALUE
					          ,DIO_U8_PA2_INITIAL_VALUE
					          ,DIO_U8_PA1_INITIAL_VALUE
					          ,DIO_U8_PA0_INITIAL_VALUE);

	DIO_U8_PORTB_REG= CONC_BIT(DIO_U8_PB7_INITIAL_VALUE
  aa:	e8 e3       	ldi	r30, 0x38	; 56
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	8f ef       	ldi	r24, 0xFF	; 255
  b0:	80 83       	st	Z, r24
						      ,DIO_U8_PB3_INITIAL_VALUE
						      ,DIO_U8_PB2_INITIAL_VALUE
						      ,DIO_U8_PB1_INITIAL_VALUE
						      ,DIO_U8_PB0_INITIAL_VALUE);

	DIO_U8_PORTC_REG= CONC_BIT(DIO_U8_PC7_INITIAL_VALUE
  b2:	e5 e3       	ldi	r30, 0x35	; 53
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	10 82       	st	Z, r1
							  ,DIO_U8_PC3_INITIAL_VALUE
							  ,DIO_U8_PC2_INITIAL_VALUE
							  ,DIO_U8_PC1_INITIAL_VALUE
							  ,DIO_U8_PC0_INITIAL_VALUE);

	DIO_U8_PORTD_REG= CONC_BIT(DIO_U8_PD7_INITIAL_VALUE
  b8:	e2 e3       	ldi	r30, 0x32	; 50
  ba:	f0 e0       	ldi	r31, 0x00	; 0
  bc:	10 82       	st	Z, r1
						      ,DIO_U8_PD4_INITIAL_VALUE
						      ,DIO_U8_PD3_INITIAL_VALUE
						      ,DIO_U8_PD2_INITIAL_VALUE
						      ,DIO_U8_PD1_INITIAL_VALUE
						      ,DIO_U8_PD0_INITIAL_VALUE);
}
  be:	cf 91       	pop	r28
  c0:	df 91       	pop	r29
  c2:	08 95       	ret

000000c4 <MDIO_VoidSetPinDirection>:
/*-------------------------------------------------------------*/
/*-------------------------------------------------------------*/
void MDIO_VoidSetPinDirection(u8 copy_u8portid,u8 copy_u8pinid,u8 copy_u8pindirection)
{
  c4:	df 93       	push	r29
  c6:	cf 93       	push	r28
  c8:	cd b7       	in	r28, 0x3d	; 61
  ca:	de b7       	in	r29, 0x3e	; 62
  cc:	2d 97       	sbiw	r28, 0x0d	; 13
  ce:	0f b6       	in	r0, 0x3f	; 63
  d0:	f8 94       	cli
  d2:	de bf       	out	0x3e, r29	; 62
  d4:	0f be       	out	0x3f, r0	; 63
  d6:	cd bf       	out	0x3d, r28	; 61
  d8:	89 83       	std	Y+1, r24	; 0x01
  da:	6a 83       	std	Y+2, r22	; 0x02
  dc:	4b 83       	std	Y+3, r20	; 0x03
	if( (copy_u8portid > DIO_U8_PORTD) || (copy_u8portid < DIO_U8_PORTA) )
  de:	89 81       	ldd	r24, Y+1	; 0x01
  e0:	84 30       	cpi	r24, 0x04	; 4
  e2:	08 f0       	brcs	.+2      	; 0xe6 <MDIO_VoidSetPinDirection+0x22>
  e4:	00 c1       	rjmp	.+512    	; 0x2e6 <MDIO_VoidSetPinDirection+0x222>
	{

	}
else
{
	switch(copy_u8portid)
  e6:	89 81       	ldd	r24, Y+1	; 0x01
  e8:	28 2f       	mov	r18, r24
  ea:	30 e0       	ldi	r19, 0x00	; 0
  ec:	3d 87       	std	Y+13, r19	; 0x0d
  ee:	2c 87       	std	Y+12, r18	; 0x0c
  f0:	8c 85       	ldd	r24, Y+12	; 0x0c
  f2:	9d 85       	ldd	r25, Y+13	; 0x0d
  f4:	81 30       	cpi	r24, 0x01	; 1
  f6:	91 05       	cpc	r25, r1
  f8:	09 f4       	brne	.+2      	; 0xfc <MDIO_VoidSetPinDirection+0x38>
  fa:	4f c0       	rjmp	.+158    	; 0x19a <MDIO_VoidSetPinDirection+0xd6>
  fc:	2c 85       	ldd	r18, Y+12	; 0x0c
  fe:	3d 85       	ldd	r19, Y+13	; 0x0d
 100:	22 30       	cpi	r18, 0x02	; 2
 102:	31 05       	cpc	r19, r1
 104:	2c f4       	brge	.+10     	; 0x110 <MDIO_VoidSetPinDirection+0x4c>
 106:	8c 85       	ldd	r24, Y+12	; 0x0c
 108:	9d 85       	ldd	r25, Y+13	; 0x0d
 10a:	00 97       	sbiw	r24, 0x00	; 0
 10c:	71 f0       	breq	.+28     	; 0x12a <MDIO_VoidSetPinDirection+0x66>
 10e:	eb c0       	rjmp	.+470    	; 0x2e6 <MDIO_VoidSetPinDirection+0x222>
 110:	2c 85       	ldd	r18, Y+12	; 0x0c
 112:	3d 85       	ldd	r19, Y+13	; 0x0d
 114:	22 30       	cpi	r18, 0x02	; 2
 116:	31 05       	cpc	r19, r1
 118:	09 f4       	brne	.+2      	; 0x11c <MDIO_VoidSetPinDirection+0x58>
 11a:	77 c0       	rjmp	.+238    	; 0x20a <MDIO_VoidSetPinDirection+0x146>
 11c:	8c 85       	ldd	r24, Y+12	; 0x0c
 11e:	9d 85       	ldd	r25, Y+13	; 0x0d
 120:	83 30       	cpi	r24, 0x03	; 3
 122:	91 05       	cpc	r25, r1
 124:	09 f4       	brne	.+2      	; 0x128 <MDIO_VoidSetPinDirection+0x64>
 126:	a9 c0       	rjmp	.+338    	; 0x27a <MDIO_VoidSetPinDirection+0x1b6>
 128:	de c0       	rjmp	.+444    	; 0x2e6 <MDIO_VoidSetPinDirection+0x222>
	{
	case DIO_U8_PORTA:
		switch(copy_u8pindirection)
 12a:	8b 81       	ldd	r24, Y+3	; 0x03
 12c:	28 2f       	mov	r18, r24
 12e:	30 e0       	ldi	r19, 0x00	; 0
 130:	3b 87       	std	Y+11, r19	; 0x0b
 132:	2a 87       	std	Y+10, r18	; 0x0a
 134:	8a 85       	ldd	r24, Y+10	; 0x0a
 136:	9b 85       	ldd	r25, Y+11	; 0x0b
 138:	00 97       	sbiw	r24, 0x00	; 0
 13a:	d1 f0       	breq	.+52     	; 0x170 <MDIO_VoidSetPinDirection+0xac>
 13c:	2a 85       	ldd	r18, Y+10	; 0x0a
 13e:	3b 85       	ldd	r19, Y+11	; 0x0b
 140:	21 30       	cpi	r18, 0x01	; 1
 142:	31 05       	cpc	r19, r1
 144:	09 f0       	breq	.+2      	; 0x148 <MDIO_VoidSetPinDirection+0x84>
 146:	cf c0       	rjmp	.+414    	; 0x2e6 <MDIO_VoidSetPinDirection+0x222>
		{
		   case DIO_U8_OUTPUT: SET_BIT(DIO_U8_DDRA_REG,copy_u8pinid);
 148:	aa e3       	ldi	r26, 0x3A	; 58
 14a:	b0 e0       	ldi	r27, 0x00	; 0
 14c:	ea e3       	ldi	r30, 0x3A	; 58
 14e:	f0 e0       	ldi	r31, 0x00	; 0
 150:	80 81       	ld	r24, Z
 152:	48 2f       	mov	r20, r24
 154:	8a 81       	ldd	r24, Y+2	; 0x02
 156:	28 2f       	mov	r18, r24
 158:	30 e0       	ldi	r19, 0x00	; 0
 15a:	81 e0       	ldi	r24, 0x01	; 1
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	02 2e       	mov	r0, r18
 160:	02 c0       	rjmp	.+4      	; 0x166 <MDIO_VoidSetPinDirection+0xa2>
 162:	88 0f       	add	r24, r24
 164:	99 1f       	adc	r25, r25
 166:	0a 94       	dec	r0
 168:	e2 f7       	brpl	.-8      	; 0x162 <MDIO_VoidSetPinDirection+0x9e>
 16a:	84 2b       	or	r24, r20
 16c:	8c 93       	st	X, r24
 16e:	bb c0       	rjmp	.+374    	; 0x2e6 <MDIO_VoidSetPinDirection+0x222>
		   break;
		   case DIO_U8_INPUT: CLR_BIT(DIO_U8_DDRA_REG,copy_u8pinid);
 170:	aa e3       	ldi	r26, 0x3A	; 58
 172:	b0 e0       	ldi	r27, 0x00	; 0
 174:	ea e3       	ldi	r30, 0x3A	; 58
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	80 81       	ld	r24, Z
 17a:	48 2f       	mov	r20, r24
 17c:	8a 81       	ldd	r24, Y+2	; 0x02
 17e:	28 2f       	mov	r18, r24
 180:	30 e0       	ldi	r19, 0x00	; 0
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	02 2e       	mov	r0, r18
 188:	02 c0       	rjmp	.+4      	; 0x18e <MDIO_VoidSetPinDirection+0xca>
 18a:	88 0f       	add	r24, r24
 18c:	99 1f       	adc	r25, r25
 18e:	0a 94       	dec	r0
 190:	e2 f7       	brpl	.-8      	; 0x18a <MDIO_VoidSetPinDirection+0xc6>
 192:	80 95       	com	r24
 194:	84 23       	and	r24, r20
 196:	8c 93       	st	X, r24
 198:	a6 c0       	rjmp	.+332    	; 0x2e6 <MDIO_VoidSetPinDirection+0x222>
		   break;
		}
		break;

	case DIO_U8_PORTB:
		switch(copy_u8pindirection)
 19a:	8b 81       	ldd	r24, Y+3	; 0x03
 19c:	28 2f       	mov	r18, r24
 19e:	30 e0       	ldi	r19, 0x00	; 0
 1a0:	39 87       	std	Y+9, r19	; 0x09
 1a2:	28 87       	std	Y+8, r18	; 0x08
 1a4:	88 85       	ldd	r24, Y+8	; 0x08
 1a6:	99 85       	ldd	r25, Y+9	; 0x09
 1a8:	00 97       	sbiw	r24, 0x00	; 0
 1aa:	d1 f0       	breq	.+52     	; 0x1e0 <MDIO_VoidSetPinDirection+0x11c>
 1ac:	28 85       	ldd	r18, Y+8	; 0x08
 1ae:	39 85       	ldd	r19, Y+9	; 0x09
 1b0:	21 30       	cpi	r18, 0x01	; 1
 1b2:	31 05       	cpc	r19, r1
 1b4:	09 f0       	breq	.+2      	; 0x1b8 <MDIO_VoidSetPinDirection+0xf4>
 1b6:	97 c0       	rjmp	.+302    	; 0x2e6 <MDIO_VoidSetPinDirection+0x222>
		{
		   case DIO_U8_OUTPUT: SET_BIT(DIO_U8_DDRB_REG,copy_u8pinid);
 1b8:	a7 e3       	ldi	r26, 0x37	; 55
 1ba:	b0 e0       	ldi	r27, 0x00	; 0
 1bc:	e7 e3       	ldi	r30, 0x37	; 55
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	80 81       	ld	r24, Z
 1c2:	48 2f       	mov	r20, r24
 1c4:	8a 81       	ldd	r24, Y+2	; 0x02
 1c6:	28 2f       	mov	r18, r24
 1c8:	30 e0       	ldi	r19, 0x00	; 0
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	02 2e       	mov	r0, r18
 1d0:	02 c0       	rjmp	.+4      	; 0x1d6 <MDIO_VoidSetPinDirection+0x112>
 1d2:	88 0f       	add	r24, r24
 1d4:	99 1f       	adc	r25, r25
 1d6:	0a 94       	dec	r0
 1d8:	e2 f7       	brpl	.-8      	; 0x1d2 <MDIO_VoidSetPinDirection+0x10e>
 1da:	84 2b       	or	r24, r20
 1dc:	8c 93       	st	X, r24
 1de:	83 c0       	rjmp	.+262    	; 0x2e6 <MDIO_VoidSetPinDirection+0x222>
		   break;
		   case DIO_U8_INPUT: CLR_BIT(DIO_U8_DDRB_REG,copy_u8pinid);
 1e0:	a7 e3       	ldi	r26, 0x37	; 55
 1e2:	b0 e0       	ldi	r27, 0x00	; 0
 1e4:	e7 e3       	ldi	r30, 0x37	; 55
 1e6:	f0 e0       	ldi	r31, 0x00	; 0
 1e8:	80 81       	ld	r24, Z
 1ea:	48 2f       	mov	r20, r24
 1ec:	8a 81       	ldd	r24, Y+2	; 0x02
 1ee:	28 2f       	mov	r18, r24
 1f0:	30 e0       	ldi	r19, 0x00	; 0
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	02 2e       	mov	r0, r18
 1f8:	02 c0       	rjmp	.+4      	; 0x1fe <MDIO_VoidSetPinDirection+0x13a>
 1fa:	88 0f       	add	r24, r24
 1fc:	99 1f       	adc	r25, r25
 1fe:	0a 94       	dec	r0
 200:	e2 f7       	brpl	.-8      	; 0x1fa <MDIO_VoidSetPinDirection+0x136>
 202:	80 95       	com	r24
 204:	84 23       	and	r24, r20
 206:	8c 93       	st	X, r24
 208:	6e c0       	rjmp	.+220    	; 0x2e6 <MDIO_VoidSetPinDirection+0x222>
		   break;
				}
	    break;
	case DIO_U8_PORTC:
		switch(copy_u8pindirection)
 20a:	8b 81       	ldd	r24, Y+3	; 0x03
 20c:	28 2f       	mov	r18, r24
 20e:	30 e0       	ldi	r19, 0x00	; 0
 210:	3f 83       	std	Y+7, r19	; 0x07
 212:	2e 83       	std	Y+6, r18	; 0x06
 214:	8e 81       	ldd	r24, Y+6	; 0x06
 216:	9f 81       	ldd	r25, Y+7	; 0x07
 218:	00 97       	sbiw	r24, 0x00	; 0
 21a:	d1 f0       	breq	.+52     	; 0x250 <MDIO_VoidSetPinDirection+0x18c>
 21c:	2e 81       	ldd	r18, Y+6	; 0x06
 21e:	3f 81       	ldd	r19, Y+7	; 0x07
 220:	21 30       	cpi	r18, 0x01	; 1
 222:	31 05       	cpc	r19, r1
 224:	09 f0       	breq	.+2      	; 0x228 <MDIO_VoidSetPinDirection+0x164>
 226:	5f c0       	rjmp	.+190    	; 0x2e6 <MDIO_VoidSetPinDirection+0x222>
		{
			 case DIO_U8_OUTPUT: SET_BIT(DIO_U8_DDRC_REG,copy_u8pinid);
 228:	a4 e3       	ldi	r26, 0x34	; 52
 22a:	b0 e0       	ldi	r27, 0x00	; 0
 22c:	e4 e3       	ldi	r30, 0x34	; 52
 22e:	f0 e0       	ldi	r31, 0x00	; 0
 230:	80 81       	ld	r24, Z
 232:	48 2f       	mov	r20, r24
 234:	8a 81       	ldd	r24, Y+2	; 0x02
 236:	28 2f       	mov	r18, r24
 238:	30 e0       	ldi	r19, 0x00	; 0
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	02 2e       	mov	r0, r18
 240:	02 c0       	rjmp	.+4      	; 0x246 <MDIO_VoidSetPinDirection+0x182>
 242:	88 0f       	add	r24, r24
 244:	99 1f       	adc	r25, r25
 246:	0a 94       	dec	r0
 248:	e2 f7       	brpl	.-8      	; 0x242 <MDIO_VoidSetPinDirection+0x17e>
 24a:	84 2b       	or	r24, r20
 24c:	8c 93       	st	X, r24
 24e:	4b c0       	rjmp	.+150    	; 0x2e6 <MDIO_VoidSetPinDirection+0x222>
			 break;
			 case DIO_U8_INPUT: CLR_BIT(DIO_U8_DDRC_REG,copy_u8pinid);
 250:	a4 e3       	ldi	r26, 0x34	; 52
 252:	b0 e0       	ldi	r27, 0x00	; 0
 254:	e4 e3       	ldi	r30, 0x34	; 52
 256:	f0 e0       	ldi	r31, 0x00	; 0
 258:	80 81       	ld	r24, Z
 25a:	48 2f       	mov	r20, r24
 25c:	8a 81       	ldd	r24, Y+2	; 0x02
 25e:	28 2f       	mov	r18, r24
 260:	30 e0       	ldi	r19, 0x00	; 0
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	02 2e       	mov	r0, r18
 268:	02 c0       	rjmp	.+4      	; 0x26e <MDIO_VoidSetPinDirection+0x1aa>
 26a:	88 0f       	add	r24, r24
 26c:	99 1f       	adc	r25, r25
 26e:	0a 94       	dec	r0
 270:	e2 f7       	brpl	.-8      	; 0x26a <MDIO_VoidSetPinDirection+0x1a6>
 272:	80 95       	com	r24
 274:	84 23       	and	r24, r20
 276:	8c 93       	st	X, r24
 278:	36 c0       	rjmp	.+108    	; 0x2e6 <MDIO_VoidSetPinDirection+0x222>
			 break;
			}
						break;
		case DIO_U8_PORTD:
				switch(copy_u8pindirection)
 27a:	8b 81       	ldd	r24, Y+3	; 0x03
 27c:	28 2f       	mov	r18, r24
 27e:	30 e0       	ldi	r19, 0x00	; 0
 280:	3d 83       	std	Y+5, r19	; 0x05
 282:	2c 83       	std	Y+4, r18	; 0x04
 284:	8c 81       	ldd	r24, Y+4	; 0x04
 286:	9d 81       	ldd	r25, Y+5	; 0x05
 288:	00 97       	sbiw	r24, 0x00	; 0
 28a:	c9 f0       	breq	.+50     	; 0x2be <MDIO_VoidSetPinDirection+0x1fa>
 28c:	2c 81       	ldd	r18, Y+4	; 0x04
 28e:	3d 81       	ldd	r19, Y+5	; 0x05
 290:	21 30       	cpi	r18, 0x01	; 1
 292:	31 05       	cpc	r19, r1
 294:	41 f5       	brne	.+80     	; 0x2e6 <MDIO_VoidSetPinDirection+0x222>
				{
				   case DIO_U8_OUTPUT: SET_BIT(DIO_U8_DDRD_REG,copy_u8pinid);
 296:	a1 e3       	ldi	r26, 0x31	; 49
 298:	b0 e0       	ldi	r27, 0x00	; 0
 29a:	e1 e3       	ldi	r30, 0x31	; 49
 29c:	f0 e0       	ldi	r31, 0x00	; 0
 29e:	80 81       	ld	r24, Z
 2a0:	48 2f       	mov	r20, r24
 2a2:	8a 81       	ldd	r24, Y+2	; 0x02
 2a4:	28 2f       	mov	r18, r24
 2a6:	30 e0       	ldi	r19, 0x00	; 0
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	02 2e       	mov	r0, r18
 2ae:	02 c0       	rjmp	.+4      	; 0x2b4 <MDIO_VoidSetPinDirection+0x1f0>
 2b0:	88 0f       	add	r24, r24
 2b2:	99 1f       	adc	r25, r25
 2b4:	0a 94       	dec	r0
 2b6:	e2 f7       	brpl	.-8      	; 0x2b0 <MDIO_VoidSetPinDirection+0x1ec>
 2b8:	84 2b       	or	r24, r20
 2ba:	8c 93       	st	X, r24
 2bc:	14 c0       	rjmp	.+40     	; 0x2e6 <MDIO_VoidSetPinDirection+0x222>
				   break;
				   case DIO_U8_INPUT: CLR_BIT(DIO_U8_DDRD_REG,copy_u8pinid);
 2be:	a1 e3       	ldi	r26, 0x31	; 49
 2c0:	b0 e0       	ldi	r27, 0x00	; 0
 2c2:	e1 e3       	ldi	r30, 0x31	; 49
 2c4:	f0 e0       	ldi	r31, 0x00	; 0
 2c6:	80 81       	ld	r24, Z
 2c8:	48 2f       	mov	r20, r24
 2ca:	8a 81       	ldd	r24, Y+2	; 0x02
 2cc:	28 2f       	mov	r18, r24
 2ce:	30 e0       	ldi	r19, 0x00	; 0
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	02 2e       	mov	r0, r18
 2d6:	02 c0       	rjmp	.+4      	; 0x2dc <MDIO_VoidSetPinDirection+0x218>
 2d8:	88 0f       	add	r24, r24
 2da:	99 1f       	adc	r25, r25
 2dc:	0a 94       	dec	r0
 2de:	e2 f7       	brpl	.-8      	; 0x2d8 <MDIO_VoidSetPinDirection+0x214>
 2e0:	80 95       	com	r24
 2e2:	84 23       	and	r24, r20
 2e4:	8c 93       	st	X, r24
				}
				break;
	}
	}

}
 2e6:	2d 96       	adiw	r28, 0x0d	; 13
 2e8:	0f b6       	in	r0, 0x3f	; 63
 2ea:	f8 94       	cli
 2ec:	de bf       	out	0x3e, r29	; 62
 2ee:	0f be       	out	0x3f, r0	; 63
 2f0:	cd bf       	out	0x3d, r28	; 61
 2f2:	cf 91       	pop	r28
 2f4:	df 91       	pop	r29
 2f6:	08 95       	ret

000002f8 <MDIO_VoidSetPinValue>:
/*-------------------------------------------------------------*/
/*-------------------------------------------------------------*/
void MDIO_VoidSetPinValue(u8 copy_u8portid,u8 copy_u8pinid,u8 copy_u8pinValue)
{
 2f8:	df 93       	push	r29
 2fa:	cf 93       	push	r28
 2fc:	cd b7       	in	r28, 0x3d	; 61
 2fe:	de b7       	in	r29, 0x3e	; 62
 300:	2d 97       	sbiw	r28, 0x0d	; 13
 302:	0f b6       	in	r0, 0x3f	; 63
 304:	f8 94       	cli
 306:	de bf       	out	0x3e, r29	; 62
 308:	0f be       	out	0x3f, r0	; 63
 30a:	cd bf       	out	0x3d, r28	; 61
 30c:	89 83       	std	Y+1, r24	; 0x01
 30e:	6a 83       	std	Y+2, r22	; 0x02
 310:	4b 83       	std	Y+3, r20	; 0x03
	if( (copy_u8portid > DIO_U8_PORTD) || (copy_u8portid < DIO_U8_PORTA)|| (copy_u8pinid > DIO_U8_PIN7) || (copy_u8pinid < DIO_U8_PIN0) )
 312:	89 81       	ldd	r24, Y+1	; 0x01
 314:	84 30       	cpi	r24, 0x04	; 4
 316:	08 f0       	brcs	.+2      	; 0x31a <MDIO_VoidSetPinValue+0x22>
 318:	04 c1       	rjmp	.+520    	; 0x522 <MDIO_VoidSetPinValue+0x22a>
 31a:	8a 81       	ldd	r24, Y+2	; 0x02
 31c:	88 30       	cpi	r24, 0x08	; 8
 31e:	08 f0       	brcs	.+2      	; 0x322 <MDIO_VoidSetPinValue+0x2a>
 320:	00 c1       	rjmp	.+512    	; 0x522 <MDIO_VoidSetPinValue+0x22a>
		{

		}
	else
	{
		switch(copy_u8portid)
 322:	89 81       	ldd	r24, Y+1	; 0x01
 324:	28 2f       	mov	r18, r24
 326:	30 e0       	ldi	r19, 0x00	; 0
 328:	3d 87       	std	Y+13, r19	; 0x0d
 32a:	2c 87       	std	Y+12, r18	; 0x0c
 32c:	8c 85       	ldd	r24, Y+12	; 0x0c
 32e:	9d 85       	ldd	r25, Y+13	; 0x0d
 330:	81 30       	cpi	r24, 0x01	; 1
 332:	91 05       	cpc	r25, r1
 334:	09 f4       	brne	.+2      	; 0x338 <MDIO_VoidSetPinValue+0x40>
 336:	4f c0       	rjmp	.+158    	; 0x3d6 <MDIO_VoidSetPinValue+0xde>
 338:	2c 85       	ldd	r18, Y+12	; 0x0c
 33a:	3d 85       	ldd	r19, Y+13	; 0x0d
 33c:	22 30       	cpi	r18, 0x02	; 2
 33e:	31 05       	cpc	r19, r1
 340:	2c f4       	brge	.+10     	; 0x34c <MDIO_VoidSetPinValue+0x54>
 342:	8c 85       	ldd	r24, Y+12	; 0x0c
 344:	9d 85       	ldd	r25, Y+13	; 0x0d
 346:	00 97       	sbiw	r24, 0x00	; 0
 348:	71 f0       	breq	.+28     	; 0x366 <MDIO_VoidSetPinValue+0x6e>
 34a:	eb c0       	rjmp	.+470    	; 0x522 <MDIO_VoidSetPinValue+0x22a>
 34c:	2c 85       	ldd	r18, Y+12	; 0x0c
 34e:	3d 85       	ldd	r19, Y+13	; 0x0d
 350:	22 30       	cpi	r18, 0x02	; 2
 352:	31 05       	cpc	r19, r1
 354:	09 f4       	brne	.+2      	; 0x358 <MDIO_VoidSetPinValue+0x60>
 356:	77 c0       	rjmp	.+238    	; 0x446 <MDIO_VoidSetPinValue+0x14e>
 358:	8c 85       	ldd	r24, Y+12	; 0x0c
 35a:	9d 85       	ldd	r25, Y+13	; 0x0d
 35c:	83 30       	cpi	r24, 0x03	; 3
 35e:	91 05       	cpc	r25, r1
 360:	09 f4       	brne	.+2      	; 0x364 <MDIO_VoidSetPinValue+0x6c>
 362:	a9 c0       	rjmp	.+338    	; 0x4b6 <MDIO_VoidSetPinValue+0x1be>
 364:	de c0       	rjmp	.+444    	; 0x522 <MDIO_VoidSetPinValue+0x22a>
		{
		case DIO_U8_PORTA:
			switch(copy_u8pinValue)
 366:	8b 81       	ldd	r24, Y+3	; 0x03
 368:	28 2f       	mov	r18, r24
 36a:	30 e0       	ldi	r19, 0x00	; 0
 36c:	3b 87       	std	Y+11, r19	; 0x0b
 36e:	2a 87       	std	Y+10, r18	; 0x0a
 370:	8a 85       	ldd	r24, Y+10	; 0x0a
 372:	9b 85       	ldd	r25, Y+11	; 0x0b
 374:	00 97       	sbiw	r24, 0x00	; 0
 376:	d1 f0       	breq	.+52     	; 0x3ac <MDIO_VoidSetPinValue+0xb4>
 378:	2a 85       	ldd	r18, Y+10	; 0x0a
 37a:	3b 85       	ldd	r19, Y+11	; 0x0b
 37c:	21 30       	cpi	r18, 0x01	; 1
 37e:	31 05       	cpc	r19, r1
 380:	09 f0       	breq	.+2      	; 0x384 <MDIO_VoidSetPinValue+0x8c>
 382:	cf c0       	rjmp	.+414    	; 0x522 <MDIO_VoidSetPinValue+0x22a>
			{
			   case DIO_U8_HIGH: SET_BIT(DIO_U8_PORTA_REG,copy_u8pinid);
 384:	ab e3       	ldi	r26, 0x3B	; 59
 386:	b0 e0       	ldi	r27, 0x00	; 0
 388:	eb e3       	ldi	r30, 0x3B	; 59
 38a:	f0 e0       	ldi	r31, 0x00	; 0
 38c:	80 81       	ld	r24, Z
 38e:	48 2f       	mov	r20, r24
 390:	8a 81       	ldd	r24, Y+2	; 0x02
 392:	28 2f       	mov	r18, r24
 394:	30 e0       	ldi	r19, 0x00	; 0
 396:	81 e0       	ldi	r24, 0x01	; 1
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	02 2e       	mov	r0, r18
 39c:	02 c0       	rjmp	.+4      	; 0x3a2 <MDIO_VoidSetPinValue+0xaa>
 39e:	88 0f       	add	r24, r24
 3a0:	99 1f       	adc	r25, r25
 3a2:	0a 94       	dec	r0
 3a4:	e2 f7       	brpl	.-8      	; 0x39e <MDIO_VoidSetPinValue+0xa6>
 3a6:	84 2b       	or	r24, r20
 3a8:	8c 93       	st	X, r24
 3aa:	bb c0       	rjmp	.+374    	; 0x522 <MDIO_VoidSetPinValue+0x22a>
			   break;
			   case DIO_U8_LOW: CLR_BIT(DIO_U8_PORTA_REG,copy_u8pinid);
 3ac:	ab e3       	ldi	r26, 0x3B	; 59
 3ae:	b0 e0       	ldi	r27, 0x00	; 0
 3b0:	eb e3       	ldi	r30, 0x3B	; 59
 3b2:	f0 e0       	ldi	r31, 0x00	; 0
 3b4:	80 81       	ld	r24, Z
 3b6:	48 2f       	mov	r20, r24
 3b8:	8a 81       	ldd	r24, Y+2	; 0x02
 3ba:	28 2f       	mov	r18, r24
 3bc:	30 e0       	ldi	r19, 0x00	; 0
 3be:	81 e0       	ldi	r24, 0x01	; 1
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	02 2e       	mov	r0, r18
 3c4:	02 c0       	rjmp	.+4      	; 0x3ca <MDIO_VoidSetPinValue+0xd2>
 3c6:	88 0f       	add	r24, r24
 3c8:	99 1f       	adc	r25, r25
 3ca:	0a 94       	dec	r0
 3cc:	e2 f7       	brpl	.-8      	; 0x3c6 <MDIO_VoidSetPinValue+0xce>
 3ce:	80 95       	com	r24
 3d0:	84 23       	and	r24, r20
 3d2:	8c 93       	st	X, r24
 3d4:	a6 c0       	rjmp	.+332    	; 0x522 <MDIO_VoidSetPinValue+0x22a>
			   break;
			}
			break;

		case DIO_U8_PORTB:
			switch(copy_u8pinValue)
 3d6:	8b 81       	ldd	r24, Y+3	; 0x03
 3d8:	28 2f       	mov	r18, r24
 3da:	30 e0       	ldi	r19, 0x00	; 0
 3dc:	39 87       	std	Y+9, r19	; 0x09
 3de:	28 87       	std	Y+8, r18	; 0x08
 3e0:	88 85       	ldd	r24, Y+8	; 0x08
 3e2:	99 85       	ldd	r25, Y+9	; 0x09
 3e4:	00 97       	sbiw	r24, 0x00	; 0
 3e6:	d1 f0       	breq	.+52     	; 0x41c <MDIO_VoidSetPinValue+0x124>
 3e8:	28 85       	ldd	r18, Y+8	; 0x08
 3ea:	39 85       	ldd	r19, Y+9	; 0x09
 3ec:	21 30       	cpi	r18, 0x01	; 1
 3ee:	31 05       	cpc	r19, r1
 3f0:	09 f0       	breq	.+2      	; 0x3f4 <MDIO_VoidSetPinValue+0xfc>
 3f2:	97 c0       	rjmp	.+302    	; 0x522 <MDIO_VoidSetPinValue+0x22a>
			{
			   case DIO_U8_HIGH: SET_BIT(DIO_U8_PORTB_REG,copy_u8pinid);
 3f4:	a8 e3       	ldi	r26, 0x38	; 56
 3f6:	b0 e0       	ldi	r27, 0x00	; 0
 3f8:	e8 e3       	ldi	r30, 0x38	; 56
 3fa:	f0 e0       	ldi	r31, 0x00	; 0
 3fc:	80 81       	ld	r24, Z
 3fe:	48 2f       	mov	r20, r24
 400:	8a 81       	ldd	r24, Y+2	; 0x02
 402:	28 2f       	mov	r18, r24
 404:	30 e0       	ldi	r19, 0x00	; 0
 406:	81 e0       	ldi	r24, 0x01	; 1
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	02 2e       	mov	r0, r18
 40c:	02 c0       	rjmp	.+4      	; 0x412 <MDIO_VoidSetPinValue+0x11a>
 40e:	88 0f       	add	r24, r24
 410:	99 1f       	adc	r25, r25
 412:	0a 94       	dec	r0
 414:	e2 f7       	brpl	.-8      	; 0x40e <MDIO_VoidSetPinValue+0x116>
 416:	84 2b       	or	r24, r20
 418:	8c 93       	st	X, r24
 41a:	83 c0       	rjmp	.+262    	; 0x522 <MDIO_VoidSetPinValue+0x22a>
			   break;
			   case DIO_U8_LOW: CLR_BIT(DIO_U8_PORTB_REG,copy_u8pinid);
 41c:	a8 e3       	ldi	r26, 0x38	; 56
 41e:	b0 e0       	ldi	r27, 0x00	; 0
 420:	e8 e3       	ldi	r30, 0x38	; 56
 422:	f0 e0       	ldi	r31, 0x00	; 0
 424:	80 81       	ld	r24, Z
 426:	48 2f       	mov	r20, r24
 428:	8a 81       	ldd	r24, Y+2	; 0x02
 42a:	28 2f       	mov	r18, r24
 42c:	30 e0       	ldi	r19, 0x00	; 0
 42e:	81 e0       	ldi	r24, 0x01	; 1
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	02 2e       	mov	r0, r18
 434:	02 c0       	rjmp	.+4      	; 0x43a <MDIO_VoidSetPinValue+0x142>
 436:	88 0f       	add	r24, r24
 438:	99 1f       	adc	r25, r25
 43a:	0a 94       	dec	r0
 43c:	e2 f7       	brpl	.-8      	; 0x436 <MDIO_VoidSetPinValue+0x13e>
 43e:	80 95       	com	r24
 440:	84 23       	and	r24, r20
 442:	8c 93       	st	X, r24
 444:	6e c0       	rjmp	.+220    	; 0x522 <MDIO_VoidSetPinValue+0x22a>
			   break;
					}
		    break;
		case DIO_U8_PORTC:
			switch(copy_u8pinValue)
 446:	8b 81       	ldd	r24, Y+3	; 0x03
 448:	28 2f       	mov	r18, r24
 44a:	30 e0       	ldi	r19, 0x00	; 0
 44c:	3f 83       	std	Y+7, r19	; 0x07
 44e:	2e 83       	std	Y+6, r18	; 0x06
 450:	8e 81       	ldd	r24, Y+6	; 0x06
 452:	9f 81       	ldd	r25, Y+7	; 0x07
 454:	00 97       	sbiw	r24, 0x00	; 0
 456:	d1 f0       	breq	.+52     	; 0x48c <MDIO_VoidSetPinValue+0x194>
 458:	2e 81       	ldd	r18, Y+6	; 0x06
 45a:	3f 81       	ldd	r19, Y+7	; 0x07
 45c:	21 30       	cpi	r18, 0x01	; 1
 45e:	31 05       	cpc	r19, r1
 460:	09 f0       	breq	.+2      	; 0x464 <MDIO_VoidSetPinValue+0x16c>
 462:	5f c0       	rjmp	.+190    	; 0x522 <MDIO_VoidSetPinValue+0x22a>
			{
				 case DIO_U8_HIGH: SET_BIT(DIO_U8_PORTC_REG,copy_u8pinid);
 464:	a5 e3       	ldi	r26, 0x35	; 53
 466:	b0 e0       	ldi	r27, 0x00	; 0
 468:	e5 e3       	ldi	r30, 0x35	; 53
 46a:	f0 e0       	ldi	r31, 0x00	; 0
 46c:	80 81       	ld	r24, Z
 46e:	48 2f       	mov	r20, r24
 470:	8a 81       	ldd	r24, Y+2	; 0x02
 472:	28 2f       	mov	r18, r24
 474:	30 e0       	ldi	r19, 0x00	; 0
 476:	81 e0       	ldi	r24, 0x01	; 1
 478:	90 e0       	ldi	r25, 0x00	; 0
 47a:	02 2e       	mov	r0, r18
 47c:	02 c0       	rjmp	.+4      	; 0x482 <MDIO_VoidSetPinValue+0x18a>
 47e:	88 0f       	add	r24, r24
 480:	99 1f       	adc	r25, r25
 482:	0a 94       	dec	r0
 484:	e2 f7       	brpl	.-8      	; 0x47e <MDIO_VoidSetPinValue+0x186>
 486:	84 2b       	or	r24, r20
 488:	8c 93       	st	X, r24
 48a:	4b c0       	rjmp	.+150    	; 0x522 <MDIO_VoidSetPinValue+0x22a>
				 break;
				 case DIO_U8_LOW: CLR_BIT(DIO_U8_PORTC_REG,copy_u8pinid);
 48c:	a5 e3       	ldi	r26, 0x35	; 53
 48e:	b0 e0       	ldi	r27, 0x00	; 0
 490:	e5 e3       	ldi	r30, 0x35	; 53
 492:	f0 e0       	ldi	r31, 0x00	; 0
 494:	80 81       	ld	r24, Z
 496:	48 2f       	mov	r20, r24
 498:	8a 81       	ldd	r24, Y+2	; 0x02
 49a:	28 2f       	mov	r18, r24
 49c:	30 e0       	ldi	r19, 0x00	; 0
 49e:	81 e0       	ldi	r24, 0x01	; 1
 4a0:	90 e0       	ldi	r25, 0x00	; 0
 4a2:	02 2e       	mov	r0, r18
 4a4:	02 c0       	rjmp	.+4      	; 0x4aa <MDIO_VoidSetPinValue+0x1b2>
 4a6:	88 0f       	add	r24, r24
 4a8:	99 1f       	adc	r25, r25
 4aa:	0a 94       	dec	r0
 4ac:	e2 f7       	brpl	.-8      	; 0x4a6 <MDIO_VoidSetPinValue+0x1ae>
 4ae:	80 95       	com	r24
 4b0:	84 23       	and	r24, r20
 4b2:	8c 93       	st	X, r24
 4b4:	36 c0       	rjmp	.+108    	; 0x522 <MDIO_VoidSetPinValue+0x22a>
				 break;
				}
							break;
			case DIO_U8_PORTD:
					switch(copy_u8pinValue)
 4b6:	8b 81       	ldd	r24, Y+3	; 0x03
 4b8:	28 2f       	mov	r18, r24
 4ba:	30 e0       	ldi	r19, 0x00	; 0
 4bc:	3d 83       	std	Y+5, r19	; 0x05
 4be:	2c 83       	std	Y+4, r18	; 0x04
 4c0:	8c 81       	ldd	r24, Y+4	; 0x04
 4c2:	9d 81       	ldd	r25, Y+5	; 0x05
 4c4:	00 97       	sbiw	r24, 0x00	; 0
 4c6:	c9 f0       	breq	.+50     	; 0x4fa <MDIO_VoidSetPinValue+0x202>
 4c8:	2c 81       	ldd	r18, Y+4	; 0x04
 4ca:	3d 81       	ldd	r19, Y+5	; 0x05
 4cc:	21 30       	cpi	r18, 0x01	; 1
 4ce:	31 05       	cpc	r19, r1
 4d0:	41 f5       	brne	.+80     	; 0x522 <MDIO_VoidSetPinValue+0x22a>
					{
					   case DIO_U8_HIGH: SET_BIT(DIO_U8_PORTD_REG,copy_u8pinid);
 4d2:	a2 e3       	ldi	r26, 0x32	; 50
 4d4:	b0 e0       	ldi	r27, 0x00	; 0
 4d6:	e2 e3       	ldi	r30, 0x32	; 50
 4d8:	f0 e0       	ldi	r31, 0x00	; 0
 4da:	80 81       	ld	r24, Z
 4dc:	48 2f       	mov	r20, r24
 4de:	8a 81       	ldd	r24, Y+2	; 0x02
 4e0:	28 2f       	mov	r18, r24
 4e2:	30 e0       	ldi	r19, 0x00	; 0
 4e4:	81 e0       	ldi	r24, 0x01	; 1
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	02 2e       	mov	r0, r18
 4ea:	02 c0       	rjmp	.+4      	; 0x4f0 <MDIO_VoidSetPinValue+0x1f8>
 4ec:	88 0f       	add	r24, r24
 4ee:	99 1f       	adc	r25, r25
 4f0:	0a 94       	dec	r0
 4f2:	e2 f7       	brpl	.-8      	; 0x4ec <MDIO_VoidSetPinValue+0x1f4>
 4f4:	84 2b       	or	r24, r20
 4f6:	8c 93       	st	X, r24
 4f8:	14 c0       	rjmp	.+40     	; 0x522 <MDIO_VoidSetPinValue+0x22a>
					   break;
					   case DIO_U8_LOW: CLR_BIT(DIO_U8_PORTD_REG,copy_u8pinid);
 4fa:	a2 e3       	ldi	r26, 0x32	; 50
 4fc:	b0 e0       	ldi	r27, 0x00	; 0
 4fe:	e2 e3       	ldi	r30, 0x32	; 50
 500:	f0 e0       	ldi	r31, 0x00	; 0
 502:	80 81       	ld	r24, Z
 504:	48 2f       	mov	r20, r24
 506:	8a 81       	ldd	r24, Y+2	; 0x02
 508:	28 2f       	mov	r18, r24
 50a:	30 e0       	ldi	r19, 0x00	; 0
 50c:	81 e0       	ldi	r24, 0x01	; 1
 50e:	90 e0       	ldi	r25, 0x00	; 0
 510:	02 2e       	mov	r0, r18
 512:	02 c0       	rjmp	.+4      	; 0x518 <MDIO_VoidSetPinValue+0x220>
 514:	88 0f       	add	r24, r24
 516:	99 1f       	adc	r25, r25
 518:	0a 94       	dec	r0
 51a:	e2 f7       	brpl	.-8      	; 0x514 <MDIO_VoidSetPinValue+0x21c>
 51c:	80 95       	com	r24
 51e:	84 23       	and	r24, r20
 520:	8c 93       	st	X, r24
					}
					break;
		}
		}

	}
 522:	2d 96       	adiw	r28, 0x0d	; 13
 524:	0f b6       	in	r0, 0x3f	; 63
 526:	f8 94       	cli
 528:	de bf       	out	0x3e, r29	; 62
 52a:	0f be       	out	0x3f, r0	; 63
 52c:	cd bf       	out	0x3d, r28	; 61
 52e:	cf 91       	pop	r28
 530:	df 91       	pop	r29
 532:	08 95       	ret

00000534 <MDIO_U8GetPinValue>:
/*-------------------------------------------------------------*/
/*-------------------------------------------------------------*/
u8 MDIO_U8GetPinValue(u8 copy_u8portid,u8 copy_u8pinid)
{
 534:	df 93       	push	r29
 536:	cf 93       	push	r28
 538:	00 d0       	rcall	.+0      	; 0x53a <MDIO_U8GetPinValue+0x6>
 53a:	00 d0       	rcall	.+0      	; 0x53c <MDIO_U8GetPinValue+0x8>
 53c:	0f 92       	push	r0
 53e:	cd b7       	in	r28, 0x3d	; 61
 540:	de b7       	in	r29, 0x3e	; 62
 542:	8a 83       	std	Y+2, r24	; 0x02
 544:	6b 83       	std	Y+3, r22	; 0x03
	u8 result=0;
 546:	19 82       	std	Y+1, r1	; 0x01
	if( (copy_u8portid > DIO_U8_PORTD) || (copy_u8portid < DIO_U8_PORTA)|| (copy_u8pinid > DIO_U8_PIN7) || (copy_u8pinid < DIO_U8_PIN0) )
 548:	8a 81       	ldd	r24, Y+2	; 0x02
 54a:	84 30       	cpi	r24, 0x04	; 4
 54c:	08 f0       	brcs	.+2      	; 0x550 <MDIO_U8GetPinValue+0x1c>
 54e:	6b c0       	rjmp	.+214    	; 0x626 <MDIO_U8GetPinValue+0xf2>
 550:	8b 81       	ldd	r24, Y+3	; 0x03
 552:	88 30       	cpi	r24, 0x08	; 8
 554:	08 f0       	brcs	.+2      	; 0x558 <MDIO_U8GetPinValue+0x24>
 556:	67 c0       	rjmp	.+206    	; 0x626 <MDIO_U8GetPinValue+0xf2>
			{

			}
		else
		{
			switch(copy_u8portid)
 558:	8a 81       	ldd	r24, Y+2	; 0x02
 55a:	28 2f       	mov	r18, r24
 55c:	30 e0       	ldi	r19, 0x00	; 0
 55e:	3d 83       	std	Y+5, r19	; 0x05
 560:	2c 83       	std	Y+4, r18	; 0x04
 562:	4c 81       	ldd	r20, Y+4	; 0x04
 564:	5d 81       	ldd	r21, Y+5	; 0x05
 566:	41 30       	cpi	r20, 0x01	; 1
 568:	51 05       	cpc	r21, r1
 56a:	41 f1       	breq	.+80     	; 0x5bc <MDIO_U8GetPinValue+0x88>
 56c:	8c 81       	ldd	r24, Y+4	; 0x04
 56e:	9d 81       	ldd	r25, Y+5	; 0x05
 570:	82 30       	cpi	r24, 0x02	; 2
 572:	91 05       	cpc	r25, r1
 574:	34 f4       	brge	.+12     	; 0x582 <MDIO_U8GetPinValue+0x4e>
 576:	2c 81       	ldd	r18, Y+4	; 0x04
 578:	3d 81       	ldd	r19, Y+5	; 0x05
 57a:	21 15       	cp	r18, r1
 57c:	31 05       	cpc	r19, r1
 57e:	61 f0       	breq	.+24     	; 0x598 <MDIO_U8GetPinValue+0x64>
 580:	52 c0       	rjmp	.+164    	; 0x626 <MDIO_U8GetPinValue+0xf2>
 582:	4c 81       	ldd	r20, Y+4	; 0x04
 584:	5d 81       	ldd	r21, Y+5	; 0x05
 586:	42 30       	cpi	r20, 0x02	; 2
 588:	51 05       	cpc	r21, r1
 58a:	51 f1       	breq	.+84     	; 0x5e0 <MDIO_U8GetPinValue+0xac>
 58c:	8c 81       	ldd	r24, Y+4	; 0x04
 58e:	9d 81       	ldd	r25, Y+5	; 0x05
 590:	83 30       	cpi	r24, 0x03	; 3
 592:	91 05       	cpc	r25, r1
 594:	b9 f1       	breq	.+110    	; 0x604 <MDIO_U8GetPinValue+0xd0>
 596:	47 c0       	rjmp	.+142    	; 0x626 <MDIO_U8GetPinValue+0xf2>
			{
			case DIO_U8_PORTA:
				   result= GET_BIT(DIO_U8_PINA_REG,copy_u8pinid);
 598:	e9 e3       	ldi	r30, 0x39	; 57
 59a:	f0 e0       	ldi	r31, 0x00	; 0
 59c:	80 81       	ld	r24, Z
 59e:	28 2f       	mov	r18, r24
 5a0:	30 e0       	ldi	r19, 0x00	; 0
 5a2:	8b 81       	ldd	r24, Y+3	; 0x03
 5a4:	88 2f       	mov	r24, r24
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	a9 01       	movw	r20, r18
 5aa:	02 c0       	rjmp	.+4      	; 0x5b0 <MDIO_U8GetPinValue+0x7c>
 5ac:	55 95       	asr	r21
 5ae:	47 95       	ror	r20
 5b0:	8a 95       	dec	r24
 5b2:	e2 f7       	brpl	.-8      	; 0x5ac <MDIO_U8GetPinValue+0x78>
 5b4:	ca 01       	movw	r24, r20
 5b6:	81 70       	andi	r24, 0x01	; 1
 5b8:	89 83       	std	Y+1, r24	; 0x01
 5ba:	35 c0       	rjmp	.+106    	; 0x626 <MDIO_U8GetPinValue+0xf2>
				   break;

			case DIO_U8_PORTB:
				   result= GET_BIT(DIO_U8_PINB_REG,copy_u8pinid);
 5bc:	e6 e3       	ldi	r30, 0x36	; 54
 5be:	f0 e0       	ldi	r31, 0x00	; 0
 5c0:	80 81       	ld	r24, Z
 5c2:	28 2f       	mov	r18, r24
 5c4:	30 e0       	ldi	r19, 0x00	; 0
 5c6:	8b 81       	ldd	r24, Y+3	; 0x03
 5c8:	88 2f       	mov	r24, r24
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	a9 01       	movw	r20, r18
 5ce:	02 c0       	rjmp	.+4      	; 0x5d4 <MDIO_U8GetPinValue+0xa0>
 5d0:	55 95       	asr	r21
 5d2:	47 95       	ror	r20
 5d4:	8a 95       	dec	r24
 5d6:	e2 f7       	brpl	.-8      	; 0x5d0 <MDIO_U8GetPinValue+0x9c>
 5d8:	ca 01       	movw	r24, r20
 5da:	81 70       	andi	r24, 0x01	; 1
 5dc:	89 83       	std	Y+1, r24	; 0x01
 5de:	23 c0       	rjmp	.+70     	; 0x626 <MDIO_U8GetPinValue+0xf2>
				   break;

			case DIO_U8_PORTC:
			       result= GET_BIT(DIO_U8_PINC_REG,copy_u8pinid);
 5e0:	e3 e3       	ldi	r30, 0x33	; 51
 5e2:	f0 e0       	ldi	r31, 0x00	; 0
 5e4:	80 81       	ld	r24, Z
 5e6:	28 2f       	mov	r18, r24
 5e8:	30 e0       	ldi	r19, 0x00	; 0
 5ea:	8b 81       	ldd	r24, Y+3	; 0x03
 5ec:	88 2f       	mov	r24, r24
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	a9 01       	movw	r20, r18
 5f2:	02 c0       	rjmp	.+4      	; 0x5f8 <MDIO_U8GetPinValue+0xc4>
 5f4:	55 95       	asr	r21
 5f6:	47 95       	ror	r20
 5f8:	8a 95       	dec	r24
 5fa:	e2 f7       	brpl	.-8      	; 0x5f4 <MDIO_U8GetPinValue+0xc0>
 5fc:	ca 01       	movw	r24, r20
 5fe:	81 70       	andi	r24, 0x01	; 1
 600:	89 83       	std	Y+1, r24	; 0x01
 602:	11 c0       	rjmp	.+34     	; 0x626 <MDIO_U8GetPinValue+0xf2>
				   break;
				case DIO_U8_PORTD:
				   result= GET_BIT(DIO_U8_PIND_REG,copy_u8pinid);
 604:	e0 e3       	ldi	r30, 0x30	; 48
 606:	f0 e0       	ldi	r31, 0x00	; 0
 608:	80 81       	ld	r24, Z
 60a:	28 2f       	mov	r18, r24
 60c:	30 e0       	ldi	r19, 0x00	; 0
 60e:	8b 81       	ldd	r24, Y+3	; 0x03
 610:	88 2f       	mov	r24, r24
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	a9 01       	movw	r20, r18
 616:	02 c0       	rjmp	.+4      	; 0x61c <MDIO_U8GetPinValue+0xe8>
 618:	55 95       	asr	r21
 61a:	47 95       	ror	r20
 61c:	8a 95       	dec	r24
 61e:	e2 f7       	brpl	.-8      	; 0x618 <MDIO_U8GetPinValue+0xe4>
 620:	ca 01       	movw	r24, r20
 622:	81 70       	andi	r24, 0x01	; 1
 624:	89 83       	std	Y+1, r24	; 0x01
				   break;
			}
			}
	return result;
 626:	89 81       	ldd	r24, Y+1	; 0x01
	}
 628:	0f 90       	pop	r0
 62a:	0f 90       	pop	r0
 62c:	0f 90       	pop	r0
 62e:	0f 90       	pop	r0
 630:	0f 90       	pop	r0
 632:	cf 91       	pop	r28
 634:	df 91       	pop	r29
 636:	08 95       	ret

00000638 <MDIO_VoidSetPortDirection>:
/*-------------------------------------------------------------*/
/*-------------------------------------------------------------*/
void MDIO_VoidSetPortDirection(u8 copy_u8portid,u8 copy_u8portdirection)
{
 638:	df 93       	push	r29
 63a:	cf 93       	push	r28
 63c:	00 d0       	rcall	.+0      	; 0x63e <MDIO_VoidSetPortDirection+0x6>
 63e:	00 d0       	rcall	.+0      	; 0x640 <MDIO_VoidSetPortDirection+0x8>
 640:	cd b7       	in	r28, 0x3d	; 61
 642:	de b7       	in	r29, 0x3e	; 62
 644:	89 83       	std	Y+1, r24	; 0x01
 646:	6a 83       	std	Y+2, r22	; 0x02
	if( (copy_u8portid > DIO_U8_PORTD) || (copy_u8portid < DIO_U8_PORTA))
 648:	89 81       	ldd	r24, Y+1	; 0x01
 64a:	84 30       	cpi	r24, 0x04	; 4
 64c:	90 f5       	brcc	.+100    	; 0x6b2 <MDIO_VoidSetPortDirection+0x7a>
			{

			}
		else
		{
			switch(copy_u8portid)
 64e:	89 81       	ldd	r24, Y+1	; 0x01
 650:	28 2f       	mov	r18, r24
 652:	30 e0       	ldi	r19, 0x00	; 0
 654:	3c 83       	std	Y+4, r19	; 0x04
 656:	2b 83       	std	Y+3, r18	; 0x03
 658:	8b 81       	ldd	r24, Y+3	; 0x03
 65a:	9c 81       	ldd	r25, Y+4	; 0x04
 65c:	81 30       	cpi	r24, 0x01	; 1
 65e:	91 05       	cpc	r25, r1
 660:	d1 f0       	breq	.+52     	; 0x696 <MDIO_VoidSetPortDirection+0x5e>
 662:	2b 81       	ldd	r18, Y+3	; 0x03
 664:	3c 81       	ldd	r19, Y+4	; 0x04
 666:	22 30       	cpi	r18, 0x02	; 2
 668:	31 05       	cpc	r19, r1
 66a:	2c f4       	brge	.+10     	; 0x676 <MDIO_VoidSetPortDirection+0x3e>
 66c:	8b 81       	ldd	r24, Y+3	; 0x03
 66e:	9c 81       	ldd	r25, Y+4	; 0x04
 670:	00 97       	sbiw	r24, 0x00	; 0
 672:	61 f0       	breq	.+24     	; 0x68c <MDIO_VoidSetPortDirection+0x54>
 674:	1e c0       	rjmp	.+60     	; 0x6b2 <MDIO_VoidSetPortDirection+0x7a>
 676:	2b 81       	ldd	r18, Y+3	; 0x03
 678:	3c 81       	ldd	r19, Y+4	; 0x04
 67a:	22 30       	cpi	r18, 0x02	; 2
 67c:	31 05       	cpc	r19, r1
 67e:	81 f0       	breq	.+32     	; 0x6a0 <MDIO_VoidSetPortDirection+0x68>
 680:	8b 81       	ldd	r24, Y+3	; 0x03
 682:	9c 81       	ldd	r25, Y+4	; 0x04
 684:	83 30       	cpi	r24, 0x03	; 3
 686:	91 05       	cpc	r25, r1
 688:	81 f0       	breq	.+32     	; 0x6aa <MDIO_VoidSetPortDirection+0x72>
 68a:	13 c0       	rjmp	.+38     	; 0x6b2 <MDIO_VoidSetPortDirection+0x7a>
			{
			case DIO_U8_PORTA:
				SET_BYTE(DIO_U8_DDRA_REG,copy_u8portdirection);
 68c:	ea e3       	ldi	r30, 0x3A	; 58
 68e:	f0 e0       	ldi	r31, 0x00	; 0
 690:	8a 81       	ldd	r24, Y+2	; 0x02
 692:	80 83       	st	Z, r24
 694:	0e c0       	rjmp	.+28     	; 0x6b2 <MDIO_VoidSetPortDirection+0x7a>
				break;
			case DIO_U8_PORTB:
				SET_BYTE(DIO_U8_DDRB_REG,copy_u8portdirection);
 696:	e7 e3       	ldi	r30, 0x37	; 55
 698:	f0 e0       	ldi	r31, 0x00	; 0
 69a:	8a 81       	ldd	r24, Y+2	; 0x02
 69c:	80 83       	st	Z, r24
 69e:	09 c0       	rjmp	.+18     	; 0x6b2 <MDIO_VoidSetPortDirection+0x7a>
				break;
			case DIO_U8_PORTC:
				SET_BYTE(DIO_U8_DDRC_REG,copy_u8portdirection);
 6a0:	e4 e3       	ldi	r30, 0x34	; 52
 6a2:	f0 e0       	ldi	r31, 0x00	; 0
 6a4:	8a 81       	ldd	r24, Y+2	; 0x02
 6a6:	80 83       	st	Z, r24
 6a8:	04 c0       	rjmp	.+8      	; 0x6b2 <MDIO_VoidSetPortDirection+0x7a>
				break;
			case DIO_U8_PORTD:
				SET_BYTE(DIO_U8_DDRD_REG,copy_u8portdirection);
 6aa:	e1 e3       	ldi	r30, 0x31	; 49
 6ac:	f0 e0       	ldi	r31, 0x00	; 0
 6ae:	8a 81       	ldd	r24, Y+2	; 0x02
 6b0:	80 83       	st	Z, r24
				break;
			}
			}
	}
 6b2:	0f 90       	pop	r0
 6b4:	0f 90       	pop	r0
 6b6:	0f 90       	pop	r0
 6b8:	0f 90       	pop	r0
 6ba:	cf 91       	pop	r28
 6bc:	df 91       	pop	r29
 6be:	08 95       	ret

000006c0 <MDIO_VoidSetPortValue>:
/*-------------------------------------------------------------*/
/*-------------------------------------------------------------*/
void MDIO_VoidSetPortValue(u8 copy_u8portid,u8 copy_u8portValue)
{
 6c0:	df 93       	push	r29
 6c2:	cf 93       	push	r28
 6c4:	00 d0       	rcall	.+0      	; 0x6c6 <MDIO_VoidSetPortValue+0x6>
 6c6:	00 d0       	rcall	.+0      	; 0x6c8 <MDIO_VoidSetPortValue+0x8>
 6c8:	cd b7       	in	r28, 0x3d	; 61
 6ca:	de b7       	in	r29, 0x3e	; 62
 6cc:	89 83       	std	Y+1, r24	; 0x01
 6ce:	6a 83       	std	Y+2, r22	; 0x02

		if( (copy_u8portid > DIO_U8_PORTD) || (copy_u8portid < DIO_U8_PORTA) )
 6d0:	89 81       	ldd	r24, Y+1	; 0x01
 6d2:	84 30       	cpi	r24, 0x04	; 4
 6d4:	90 f5       	brcc	.+100    	; 0x73a <MDIO_VoidSetPortValue+0x7a>
				{

				}
			else
			{
				switch(copy_u8portid)
 6d6:	89 81       	ldd	r24, Y+1	; 0x01
 6d8:	28 2f       	mov	r18, r24
 6da:	30 e0       	ldi	r19, 0x00	; 0
 6dc:	3c 83       	std	Y+4, r19	; 0x04
 6de:	2b 83       	std	Y+3, r18	; 0x03
 6e0:	8b 81       	ldd	r24, Y+3	; 0x03
 6e2:	9c 81       	ldd	r25, Y+4	; 0x04
 6e4:	81 30       	cpi	r24, 0x01	; 1
 6e6:	91 05       	cpc	r25, r1
 6e8:	d1 f0       	breq	.+52     	; 0x71e <MDIO_VoidSetPortValue+0x5e>
 6ea:	2b 81       	ldd	r18, Y+3	; 0x03
 6ec:	3c 81       	ldd	r19, Y+4	; 0x04
 6ee:	22 30       	cpi	r18, 0x02	; 2
 6f0:	31 05       	cpc	r19, r1
 6f2:	2c f4       	brge	.+10     	; 0x6fe <MDIO_VoidSetPortValue+0x3e>
 6f4:	8b 81       	ldd	r24, Y+3	; 0x03
 6f6:	9c 81       	ldd	r25, Y+4	; 0x04
 6f8:	00 97       	sbiw	r24, 0x00	; 0
 6fa:	61 f0       	breq	.+24     	; 0x714 <MDIO_VoidSetPortValue+0x54>
 6fc:	1e c0       	rjmp	.+60     	; 0x73a <MDIO_VoidSetPortValue+0x7a>
 6fe:	2b 81       	ldd	r18, Y+3	; 0x03
 700:	3c 81       	ldd	r19, Y+4	; 0x04
 702:	22 30       	cpi	r18, 0x02	; 2
 704:	31 05       	cpc	r19, r1
 706:	81 f0       	breq	.+32     	; 0x728 <MDIO_VoidSetPortValue+0x68>
 708:	8b 81       	ldd	r24, Y+3	; 0x03
 70a:	9c 81       	ldd	r25, Y+4	; 0x04
 70c:	83 30       	cpi	r24, 0x03	; 3
 70e:	91 05       	cpc	r25, r1
 710:	81 f0       	breq	.+32     	; 0x732 <MDIO_VoidSetPortValue+0x72>
 712:	13 c0       	rjmp	.+38     	; 0x73a <MDIO_VoidSetPortValue+0x7a>
				{
				case DIO_U8_PORTA:
					    SET_BYTE(DIO_U8_PORTA_REG,copy_u8portValue);
 714:	eb e3       	ldi	r30, 0x3B	; 59
 716:	f0 e0       	ldi	r31, 0x00	; 0
 718:	8a 81       	ldd	r24, Y+2	; 0x02
 71a:	80 83       	st	Z, r24
 71c:	0e c0       	rjmp	.+28     	; 0x73a <MDIO_VoidSetPortValue+0x7a>
					   break;

				case DIO_U8_PORTB:
					    SET_BYTE(DIO_U8_PORTB_REG,copy_u8portValue);
 71e:	e8 e3       	ldi	r30, 0x38	; 56
 720:	f0 e0       	ldi	r31, 0x00	; 0
 722:	8a 81       	ldd	r24, Y+2	; 0x02
 724:	80 83       	st	Z, r24
 726:	09 c0       	rjmp	.+18     	; 0x73a <MDIO_VoidSetPortValue+0x7a>
					   break;

				case DIO_U8_PORTC:
				        SET_BYTE(DIO_U8_PORTC_REG,copy_u8portValue);
 728:	e5 e3       	ldi	r30, 0x35	; 53
 72a:	f0 e0       	ldi	r31, 0x00	; 0
 72c:	8a 81       	ldd	r24, Y+2	; 0x02
 72e:	80 83       	st	Z, r24
 730:	04 c0       	rjmp	.+8      	; 0x73a <MDIO_VoidSetPortValue+0x7a>
					   break;
					case DIO_U8_PORTD:
					   SET_BYTE(DIO_U8_PORTD_REG,copy_u8portValue);
 732:	e2 e3       	ldi	r30, 0x32	; 50
 734:	f0 e0       	ldi	r31, 0x00	; 0
 736:	8a 81       	ldd	r24, Y+2	; 0x02
 738:	80 83       	st	Z, r24
					   break;
				}
				}

	}
 73a:	0f 90       	pop	r0
 73c:	0f 90       	pop	r0
 73e:	0f 90       	pop	r0
 740:	0f 90       	pop	r0
 742:	cf 91       	pop	r28
 744:	df 91       	pop	r29
 746:	08 95       	ret

00000748 <MGI_u8_voidInit>:
#include "../Include/MCAL/GLOBAL_INTERRUPT/GI_Private.h"
#include "../Include/MCAL/GLOBAL_INTERRUPT/GI_Cfg.h"

/*-------------------------------------------------------------*/
void MGI_u8_voidInit(void)
{
 748:	df 93       	push	r29
 74a:	cf 93       	push	r28
 74c:	cd b7       	in	r28, 0x3d	; 61
 74e:	de b7       	in	r29, 0x3e	; 62
#if MGI_u8_INITIAL_ENABLE == MGI_u8_ENABLE
	SET_BIT(GI,MGI_u8_INTERRUPT_ENABLE_BIT);
#else
	CLR_BIT(GI,MGI_u8_INTERRUPT_ENABLE_BIT);
 750:	af e5       	ldi	r26, 0x5F	; 95
 752:	b0 e0       	ldi	r27, 0x00	; 0
 754:	ef e5       	ldi	r30, 0x5F	; 95
 756:	f0 e0       	ldi	r31, 0x00	; 0
 758:	80 81       	ld	r24, Z
 75a:	8f 77       	andi	r24, 0x7F	; 127
 75c:	8c 93       	st	X, r24
#endif
}
 75e:	cf 91       	pop	r28
 760:	df 91       	pop	r29
 762:	08 95       	ret

00000764 <MGI_voidEnable>:
/*-------------------------------------------------------------*/
void MGI_voidEnable(void)
{
 764:	df 93       	push	r29
 766:	cf 93       	push	r28
 768:	cd b7       	in	r28, 0x3d	; 61
 76a:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(GI,MGI_u8_INTERRUPT_ENABLE_BIT);
 76c:	af e5       	ldi	r26, 0x5F	; 95
 76e:	b0 e0       	ldi	r27, 0x00	; 0
 770:	ef e5       	ldi	r30, 0x5F	; 95
 772:	f0 e0       	ldi	r31, 0x00	; 0
 774:	80 81       	ld	r24, Z
 776:	80 68       	ori	r24, 0x80	; 128
 778:	8c 93       	st	X, r24
}
 77a:	cf 91       	pop	r28
 77c:	df 91       	pop	r29
 77e:	08 95       	ret

00000780 <MGI_voidDisable>:
/*-------------------------------------------------------------*/

void MGI_voidDisable(void)
{
 780:	df 93       	push	r29
 782:	cf 93       	push	r28
 784:	cd b7       	in	r28, 0x3d	; 61
 786:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(GI,MGI_u8_INTERRUPT_ENABLE_BIT);
 788:	af e5       	ldi	r26, 0x5F	; 95
 78a:	b0 e0       	ldi	r27, 0x00	; 0
 78c:	ef e5       	ldi	r30, 0x5F	; 95
 78e:	f0 e0       	ldi	r31, 0x00	; 0
 790:	80 81       	ld	r24, Z
 792:	8f 77       	andi	r24, 0x7F	; 127
 794:	8c 93       	st	X, r24
}
 796:	cf 91       	pop	r28
 798:	df 91       	pop	r29
 79a:	08 95       	ret

0000079c <__vector_11>:

/*-------------------------------------------------------------*/
/*----------------------TIMER0_OVF_ISR-------------------------*/
void __vector_11(void)	__attribute__((signal));
void __vector_11(void)
{
 79c:	1f 92       	push	r1
 79e:	0f 92       	push	r0
 7a0:	0f b6       	in	r0, 0x3f	; 63
 7a2:	0f 92       	push	r0
 7a4:	11 24       	eor	r1, r1
 7a6:	2f 93       	push	r18
 7a8:	3f 93       	push	r19
 7aa:	4f 93       	push	r20
 7ac:	5f 93       	push	r21
 7ae:	6f 93       	push	r22
 7b0:	7f 93       	push	r23
 7b2:	8f 93       	push	r24
 7b4:	9f 93       	push	r25
 7b6:	af 93       	push	r26
 7b8:	bf 93       	push	r27
 7ba:	ef 93       	push	r30
 7bc:	ff 93       	push	r31
 7be:	df 93       	push	r29
 7c0:	cf 93       	push	r28
 7c2:	cd b7       	in	r28, 0x3d	; 61
 7c4:	de b7       	in	r29, 0x3e	; 62
	static u16 local_u8Counter =0;
		local_u8Counter++;
 7c6:	80 91 64 00 	lds	r24, 0x0064
 7ca:	90 91 65 00 	lds	r25, 0x0065
 7ce:	01 96       	adiw	r24, 0x01	; 1
 7d0:	90 93 65 00 	sts	0x0065, r25
 7d4:	80 93 64 00 	sts	0x0064, r24
		if(local_u8Counter==3097)
 7d8:	80 91 64 00 	lds	r24, 0x0064
 7dc:	90 91 65 00 	lds	r25, 0x0065
 7e0:	2c e0       	ldi	r18, 0x0C	; 12
 7e2:	89 31       	cpi	r24, 0x19	; 25
 7e4:	92 07       	cpc	r25, r18
 7e6:	99 f4       	brne	.+38     	; 0x80e <__vector_11+0x72>
		{
			TIMER0_u8_TCNT0=TIMERS_u8_PRELOAD_VALUE;
 7e8:	e2 e5       	ldi	r30, 0x52	; 82
 7ea:	f0 e0       	ldi	r31, 0x00	; 0
 7ec:	80 ec       	ldi	r24, 0xC0	; 192
 7ee:	80 83       	st	Z, r24
			local_u8Counter=0;
 7f0:	10 92 65 00 	sts	0x0065, r1
 7f4:	10 92 64 00 	sts	0x0064, r1
			if (global_PF_NORMAL!=NULL)
 7f8:	80 91 60 00 	lds	r24, 0x0060
 7fc:	90 91 61 00 	lds	r25, 0x0061
 800:	00 97       	sbiw	r24, 0x00	; 0
 802:	29 f0       	breq	.+10     	; 0x80e <__vector_11+0x72>
			{
				global_PF_NORMAL();
 804:	e0 91 60 00 	lds	r30, 0x0060
 808:	f0 91 61 00 	lds	r31, 0x0061
 80c:	09 95       	icall
			}
		}
}
 80e:	cf 91       	pop	r28
 810:	df 91       	pop	r29
 812:	ff 91       	pop	r31
 814:	ef 91       	pop	r30
 816:	bf 91       	pop	r27
 818:	af 91       	pop	r26
 81a:	9f 91       	pop	r25
 81c:	8f 91       	pop	r24
 81e:	7f 91       	pop	r23
 820:	6f 91       	pop	r22
 822:	5f 91       	pop	r21
 824:	4f 91       	pop	r20
 826:	3f 91       	pop	r19
 828:	2f 91       	pop	r18
 82a:	0f 90       	pop	r0
 82c:	0f be       	out	0x3f, r0	; 63
 82e:	0f 90       	pop	r0
 830:	1f 90       	pop	r1
 832:	18 95       	reti

00000834 <__vector_10>:
/*-------------------------------------------------------------*/
/*----------------------TIMER0_CTC_ISR-------------------------*/

void __vector_10(void)	__attribute__((signal));
void __vector_10(void)
{
 834:	1f 92       	push	r1
 836:	0f 92       	push	r0
 838:	0f b6       	in	r0, 0x3f	; 63
 83a:	0f 92       	push	r0
 83c:	11 24       	eor	r1, r1
 83e:	2f 93       	push	r18
 840:	3f 93       	push	r19
 842:	4f 93       	push	r20
 844:	5f 93       	push	r21
 846:	6f 93       	push	r22
 848:	7f 93       	push	r23
 84a:	8f 93       	push	r24
 84c:	9f 93       	push	r25
 84e:	af 93       	push	r26
 850:	bf 93       	push	r27
 852:	ef 93       	push	r30
 854:	ff 93       	push	r31
 856:	df 93       	push	r29
 858:	cf 93       	push	r28
 85a:	cd b7       	in	r28, 0x3d	; 61
 85c:	de b7       	in	r29, 0x3e	; 62
	static u16 local_u8Counter =0;
			local_u8Counter++;
 85e:	80 91 66 00 	lds	r24, 0x0066
 862:	90 91 67 00 	lds	r25, 0x0067
 866:	01 96       	adiw	r24, 0x01	; 1
 868:	90 93 67 00 	sts	0x0067, r25
 86c:	80 93 66 00 	sts	0x0066, r24
			if(local_u8Counter==10000)
 870:	80 91 66 00 	lds	r24, 0x0066
 874:	90 91 67 00 	lds	r25, 0x0067
 878:	27 e2       	ldi	r18, 0x27	; 39
 87a:	80 31       	cpi	r24, 0x10	; 16
 87c:	92 07       	cpc	r25, r18
 87e:	79 f4       	brne	.+30     	; 0x89e <__stack+0x3f>
			{
				local_u8Counter=0;
 880:	10 92 67 00 	sts	0x0067, r1
 884:	10 92 66 00 	sts	0x0066, r1
				if (global_PF_CTC!=NULL)
 888:	80 91 62 00 	lds	r24, 0x0062
 88c:	90 91 63 00 	lds	r25, 0x0063
 890:	00 97       	sbiw	r24, 0x00	; 0
 892:	29 f0       	breq	.+10     	; 0x89e <__stack+0x3f>
				{
					global_PF_CTC();
 894:	e0 91 62 00 	lds	r30, 0x0062
 898:	f0 91 63 00 	lds	r31, 0x0063
 89c:	09 95       	icall
				}
			}
}
 89e:	cf 91       	pop	r28
 8a0:	df 91       	pop	r29
 8a2:	ff 91       	pop	r31
 8a4:	ef 91       	pop	r30
 8a6:	bf 91       	pop	r27
 8a8:	af 91       	pop	r26
 8aa:	9f 91       	pop	r25
 8ac:	8f 91       	pop	r24
 8ae:	7f 91       	pop	r23
 8b0:	6f 91       	pop	r22
 8b2:	5f 91       	pop	r21
 8b4:	4f 91       	pop	r20
 8b6:	3f 91       	pop	r19
 8b8:	2f 91       	pop	r18
 8ba:	0f 90       	pop	r0
 8bc:	0f be       	out	0x3f, r0	; 63
 8be:	0f 90       	pop	r0
 8c0:	1f 90       	pop	r1
 8c2:	18 95       	reti

000008c4 <MTIMERS_voidTimer0Init>:
/*-------------------------------------------------------------*/

void MTIMERS_voidTimer0Init(void)
{
 8c4:	df 93       	push	r29
 8c6:	cf 93       	push	r28
 8c8:	cd b7       	in	r28, 0x3d	; 61
 8ca:	de b7       	in	r29, 0x3e	; 62
    	  	  CLR_BIT(TIMER0_u8_TIMSK,TIMSK_u8_OCIE0_PIN1);
    		#endif
 TIMER0_u8_OCR0= TIMERS_u8_OCR0_VALUE;
 #elif (TIMER_u8_MODE == TIMER_u8_FPWM_MODE)

   	  SET_BIT(TIMER0_u8_TCCR0,TCCR0_u8_WGM01_PIN3);
 8cc:	a3 e5       	ldi	r26, 0x53	; 83
 8ce:	b0 e0       	ldi	r27, 0x00	; 0
 8d0:	e3 e5       	ldi	r30, 0x53	; 83
 8d2:	f0 e0       	ldi	r31, 0x00	; 0
 8d4:	80 81       	ld	r24, Z
 8d6:	88 60       	ori	r24, 0x08	; 8
 8d8:	8c 93       	st	X, r24
   	  SET_BIT(TIMER0_u8_TCCR0,TCCR0_u8_WGM00_PIN6);
 8da:	a3 e5       	ldi	r26, 0x53	; 83
 8dc:	b0 e0       	ldi	r27, 0x00	; 0
 8de:	e3 e5       	ldi	r30, 0x53	; 83
 8e0:	f0 e0       	ldi	r31, 0x00	; 0
 8e2:	80 81       	ld	r24, Z
 8e4:	80 64       	ori	r24, 0x40	; 64
 8e6:	8c 93       	st	X, r24
   	  	  SET_BIT(TIMER0_u8_TCCR0,TCCR0_u8_COM00_PIN4);
   	  	  SET_BIT(TIMER0_u8_TCCR0,TCCR0_u8_COM01_PIN5);

   		#elif ((TIMER_u8_MODE_OF_FPWM == TIMER_u8_FPWM_NONINVERTING))
   	  	  /*Timer/Counter0 Overflow Interrupt Disable*/
   	  	CLR_BIT(TIMER0_u8_TCCR0,TCCR0_u8_COM00_PIN4);
 8e8:	a3 e5       	ldi	r26, 0x53	; 83
 8ea:	b0 e0       	ldi	r27, 0x00	; 0
 8ec:	e3 e5       	ldi	r30, 0x53	; 83
 8ee:	f0 e0       	ldi	r31, 0x00	; 0
 8f0:	80 81       	ld	r24, Z
 8f2:	8f 7e       	andi	r24, 0xEF	; 239
 8f4:	8c 93       	st	X, r24
   	    SET_BIT(TIMER0_u8_TCCR0,TCCR0_u8_COM01_PIN5);
 8f6:	a3 e5       	ldi	r26, 0x53	; 83
 8f8:	b0 e0       	ldi	r27, 0x00	; 0
 8fa:	e3 e5       	ldi	r30, 0x53	; 83
 8fc:	f0 e0       	ldi	r31, 0x00	; 0
 8fe:	80 81       	ld	r24, Z
 900:	80 62       	ori	r24, 0x20	; 32
 902:	8c 93       	st	X, r24
   		#endif

  #endif

  TIMER0_u8_TCCR0 &=TIMERS_u8_TCCR0_PRESCALER_MASK;
 904:	a3 e5       	ldi	r26, 0x53	; 83
 906:	b0 e0       	ldi	r27, 0x00	; 0
 908:	e3 e5       	ldi	r30, 0x53	; 83
 90a:	f0 e0       	ldi	r31, 0x00	; 0
 90c:	80 81       	ld	r24, Z
 90e:	88 7f       	andi	r24, 0xF8	; 248
 910:	8c 93       	st	X, r24
  TIMER0_u8_TCCR0 |= TIMERS_u8_PRESCALER_VALUE;
 912:	a3 e5       	ldi	r26, 0x53	; 83
 914:	b0 e0       	ldi	r27, 0x00	; 0
 916:	e3 e5       	ldi	r30, 0x53	; 83
 918:	f0 e0       	ldi	r31, 0x00	; 0
 91a:	80 81       	ld	r24, Z
 91c:	82 60       	ori	r24, 0x02	; 2
 91e:	8c 93       	st	X, r24
  /*    CLR_BIT(TIMER0_u8_TCCR0,TCCR0_u8_COM00_PIN4);
      CLR_BIT(TIMER0_u8_TCCR0,TCCR0_u8_COM01_PIN5);
*/
     /*Select 1024 Prescaler */

}
 920:	cf 91       	pop	r28
 922:	df 91       	pop	r29
 924:	08 95       	ret

00000926 <MTIMERS_voidTimer0OVFSetCallBack>:
/*-------------------------------------------------------------*/

void MTIMERS_voidTimer0OVFSetCallBack(void(*copy_pf)(void))
{
 926:	df 93       	push	r29
 928:	cf 93       	push	r28
 92a:	00 d0       	rcall	.+0      	; 0x92c <MTIMERS_voidTimer0OVFSetCallBack+0x6>
 92c:	cd b7       	in	r28, 0x3d	; 61
 92e:	de b7       	in	r29, 0x3e	; 62
 930:	9a 83       	std	Y+2, r25	; 0x02
 932:	89 83       	std	Y+1, r24	; 0x01
	global_PF_NORMAL=copy_pf;
 934:	89 81       	ldd	r24, Y+1	; 0x01
 936:	9a 81       	ldd	r25, Y+2	; 0x02
 938:	90 93 61 00 	sts	0x0061, r25
 93c:	80 93 60 00 	sts	0x0060, r24
}
 940:	0f 90       	pop	r0
 942:	0f 90       	pop	r0
 944:	cf 91       	pop	r28
 946:	df 91       	pop	r29
 948:	08 95       	ret

0000094a <MTIMERS_voidTimer0CTCSetCallBack>:
/*-------------------------------------------------------------*/

void MTIMERS_voidTimer0CTCSetCallBack(void(*copy_pf)(void))
{
 94a:	df 93       	push	r29
 94c:	cf 93       	push	r28
 94e:	00 d0       	rcall	.+0      	; 0x950 <MTIMERS_voidTimer0CTCSetCallBack+0x6>
 950:	cd b7       	in	r28, 0x3d	; 61
 952:	de b7       	in	r29, 0x3e	; 62
 954:	9a 83       	std	Y+2, r25	; 0x02
 956:	89 83       	std	Y+1, r24	; 0x01
	global_PF_CTC=copy_pf;
 958:	89 81       	ldd	r24, Y+1	; 0x01
 95a:	9a 81       	ldd	r25, Y+2	; 0x02
 95c:	90 93 63 00 	sts	0x0063, r25
 960:	80 93 62 00 	sts	0x0062, r24
}
 964:	0f 90       	pop	r0
 966:	0f 90       	pop	r0
 968:	cf 91       	pop	r28
 96a:	df 91       	pop	r29
 96c:	08 95       	ret

0000096e <MTIMERS_voidTimer1Init>:
#include "../Include/MCAL/TIMER1/TIMER1_Cfg.h"

/*-------------------------------------------------------------*/

void MTIMERS_voidTimer1Init(void)
{
 96e:	df 93       	push	r29
 970:	cf 93       	push	r28
 972:	cd b7       	in	r28, 0x3d	; 61
 974:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(TIMER1_u8_TCCR1A_REG,TCCR1A_u8_COM1A1_PIN7);
 976:	af e4       	ldi	r26, 0x4F	; 79
 978:	b0 e0       	ldi	r27, 0x00	; 0
 97a:	ef e4       	ldi	r30, 0x4F	; 79
 97c:	f0 e0       	ldi	r31, 0x00	; 0
 97e:	80 81       	ld	r24, Z
 980:	80 68       	ori	r24, 0x80	; 128
 982:	8c 93       	st	X, r24
	CLR_BIT(TIMER1_u8_TCCR1A_REG,TCCR1A_u8_COM1A0_PIN6);
 984:	af e4       	ldi	r26, 0x4F	; 79
 986:	b0 e0       	ldi	r27, 0x00	; 0
 988:	ef e4       	ldi	r30, 0x4F	; 79
 98a:	f0 e0       	ldi	r31, 0x00	; 0
 98c:	80 81       	ld	r24, Z
 98e:	8f 7b       	andi	r24, 0xBF	; 191
 990:	8c 93       	st	X, r24

	CLR_BIT(TIMER1_u8_TCCR1A_REG,TCCR1A_u8_WGM10_PIN0);
 992:	af e4       	ldi	r26, 0x4F	; 79
 994:	b0 e0       	ldi	r27, 0x00	; 0
 996:	ef e4       	ldi	r30, 0x4F	; 79
 998:	f0 e0       	ldi	r31, 0x00	; 0
 99a:	80 81       	ld	r24, Z
 99c:	8e 7f       	andi	r24, 0xFE	; 254
 99e:	8c 93       	st	X, r24
	SET_BIT(TIMER1_u8_TCCR1A_REG,TCCR1A_u8_WGM11_PIN1);
 9a0:	af e4       	ldi	r26, 0x4F	; 79
 9a2:	b0 e0       	ldi	r27, 0x00	; 0
 9a4:	ef e4       	ldi	r30, 0x4F	; 79
 9a6:	f0 e0       	ldi	r31, 0x00	; 0
 9a8:	80 81       	ld	r24, Z
 9aa:	82 60       	ori	r24, 0x02	; 2
 9ac:	8c 93       	st	X, r24
	
	SET_BIT(TIMER1_u8_TCCR1B_REG,TCCR1B_u8_WGM12_PIN3);
 9ae:	ae e4       	ldi	r26, 0x4E	; 78
 9b0:	b0 e0       	ldi	r27, 0x00	; 0
 9b2:	ee e4       	ldi	r30, 0x4E	; 78
 9b4:	f0 e0       	ldi	r31, 0x00	; 0
 9b6:	80 81       	ld	r24, Z
 9b8:	88 60       	ori	r24, 0x08	; 8
 9ba:	8c 93       	st	X, r24
	SET_BIT(TIMER1_u8_TCCR1B_REG,TCCR1B_u8_WGM13_PIN4);
 9bc:	ae e4       	ldi	r26, 0x4E	; 78
 9be:	b0 e0       	ldi	r27, 0x00	; 0
 9c0:	ee e4       	ldi	r30, 0x4E	; 78
 9c2:	f0 e0       	ldi	r31, 0x00	; 0
 9c4:	80 81       	ld	r24, Z
 9c6:	80 61       	ori	r24, 0x10	; 16
 9c8:	8c 93       	st	X, r24

	TIMER1_u8_OCR1A_REG=1500;
 9ca:	ea e4       	ldi	r30, 0x4A	; 74
 9cc:	f0 e0       	ldi	r31, 0x00	; 0
 9ce:	8c ed       	ldi	r24, 0xDC	; 220
 9d0:	95 e0       	ldi	r25, 0x05	; 5
 9d2:	91 83       	std	Z+1, r25	; 0x01
 9d4:	80 83       	st	Z, r24
	TIMER1_u8_ICR1_REG=19999;
 9d6:	e6 e4       	ldi	r30, 0x46	; 70
 9d8:	f0 e0       	ldi	r31, 0x00	; 0
 9da:	8f e1       	ldi	r24, 0x1F	; 31
 9dc:	9e e4       	ldi	r25, 0x4E	; 78
 9de:	91 83       	std	Z+1, r25	; 0x01
 9e0:	80 83       	st	Z, r24

	CLR_BIT(TIMER1_u8_TCCR1B_REG,TCCR1B_u8_CS10_PIN0);
 9e2:	ae e4       	ldi	r26, 0x4E	; 78
 9e4:	b0 e0       	ldi	r27, 0x00	; 0
 9e6:	ee e4       	ldi	r30, 0x4E	; 78
 9e8:	f0 e0       	ldi	r31, 0x00	; 0
 9ea:	80 81       	ld	r24, Z
 9ec:	8e 7f       	andi	r24, 0xFE	; 254
 9ee:	8c 93       	st	X, r24
    SET_BIT(TIMER1_u8_TCCR1B_REG,TCCR1B_u8_CS11_PIN1);
 9f0:	ae e4       	ldi	r26, 0x4E	; 78
 9f2:	b0 e0       	ldi	r27, 0x00	; 0
 9f4:	ee e4       	ldi	r30, 0x4E	; 78
 9f6:	f0 e0       	ldi	r31, 0x00	; 0
 9f8:	80 81       	ld	r24, Z
 9fa:	82 60       	ori	r24, 0x02	; 2
 9fc:	8c 93       	st	X, r24
	CLR_BIT(TIMER1_u8_TCCR1B_REG,TCCR1B_u8_CS12_PIN2);
 9fe:	ae e4       	ldi	r26, 0x4E	; 78
 a00:	b0 e0       	ldi	r27, 0x00	; 0
 a02:	ee e4       	ldi	r30, 0x4E	; 78
 a04:	f0 e0       	ldi	r31, 0x00	; 0
 a06:	80 81       	ld	r24, Z
 a08:	8b 7f       	andi	r24, 0xFB	; 251
 a0a:	8c 93       	st	X, r24
}
 a0c:	cf 91       	pop	r28
 a0e:	df 91       	pop	r29
 a10:	08 95       	ret

00000a12 <main>:
 *      Author: Ahmed Ibrahim
 */
#define F_CPU 8000000

int main()
{
 a12:	df 93       	push	r29
 a14:	cf 93       	push	r28
 a16:	cd b7       	in	r28, 0x3d	; 61
 a18:	de b7       	in	r29, 0x3e	; 62
 a1a:	ff cf       	rjmp	.-2      	; 0xa1a <main+0x8>

00000a1c <_exit>:
 a1c:	f8 94       	cli

00000a1e <__stop_program>:
 a1e:	ff cf       	rjmp	.-2      	; 0xa1e <__stop_program>
